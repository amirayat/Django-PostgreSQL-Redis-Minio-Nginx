version: "3.7"

services:

  web:
    build: "./app"
    image: django_app
    container_name: django_app
    restart: "always"
    expose:
      - "8000"
    volumes:
      - ./volumes/app:/home/appuser/app
      - ./volumes/log:/home/appuser/log
    networks:
      - postgres_network
      - minio_network
      - redis_network
    env_file:
      - "./.env"
    depends_on:
      - "redis"
      - "postgres"
      - "minio"
    security_opt:
      - no-new-privileges:true

  postgres:
    image: postgres:alpine
    container_name: django_postgres
    hostname: postgres
    command: -p ${DB_PORT}
    expose:
      - ${DB_PORT}
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - postgres_network
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data 
    security_opt:
      - no-new-privileges:true

  minio: 
    image: quay.io/minio/minio
    container_name: django_minio
    hostname: minio
    command: server --console-address ":9001" /data
    expose:
      - "9000"
    ports:
      - 9001:9001
    networks:
      - minio_network
    environment:
      MINIO_ROOT_USER: ${DJANGO_MINIO_STORAGE_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${DJANGO_MINIO_STORAGE_SECRET_KEY}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    security_opt:
      - no-new-privileges:true

  redis:
    image: redis:alpine
    container_name: django_redis
    hostname: redis
    command: redis-server --requirepass ${REDIS_PASS} --port ${REDIS_PORT}
    expose:
      - ${REDIS_PORT}
    restart: always
    volumes: 
      - ./volumes/redis/data:/data
    networks:
      - redis_network
    security_opt:
      - no-new-privileges:true

  nginx:
    image: owasp/modsecurity-crs:nginx-alpine
    container_name: django_nginx
    restart: "always"
    ports:
      - ${NGINX_PORT}:80
    networks:
      - minio_network
    depends_on:
      - "web"
    volumes:
      - ./volumes/log:/var/log/nginx
      - ./volumes/nginx/default.conf:/etc/nginx/templates/conf.d/default.conf.template
    security_opt:
      - no-new-privileges:true

networks:
  postgres_network:
  minio_network:
  redis_network: